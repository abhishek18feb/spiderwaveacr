{"version":3,"sources":["Backend/Reset/Reset.module.css","Backend/Reset/Reset.js","component/UI/Button/Button.js","component/UI/Button/Button.module.css"],"names":["module","exports","center","cancelbtn","container","psw","modal","modal_content","animatezoom","Reset","props","_this","Object","_home_ambika_Documents_react_practice_spiderwaveacr_spiderwaveacr_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_ambika_Documents_react_practice_spiderwaveacr_spiderwaveacr_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_ambika_Documents_react_practice_spiderwaveacr_spiderwaveacr_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","controls","password","elementType","elementConfig","type","placeholder","value","validation","required","minLength","valid","touched","label","confirm_password","isSignup","formIsValid","inputChangedHandler","event","controlName","updatedControls","updateObject","_home_ambika_Documents_react_practice_spiderwaveacr_spiderwaveacr_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","updatedResetForm","orderForm","inputIdentifier","length","document","getElementsByClassName","innerHTML","setState","submitHandler","search","window","location","resetToken","URLSearchParams","get","console","log","preventDefault","onReset","_this2","resetResponseMsg","formElementArray","key","push","id","config","form","map","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_component_UI_Input_Input__WEBPACK_IMPORTED_MODULE_11__","invalid","shouldValidate","changed","className","resetStyle","resetResponse","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","_component_UI_Alert_Alert__WEBPACK_IMPORTED_MODULE_14__","message","animate","join","onSubmit","_component_UI_Button_Button__WEBPACK_IMPORTED_MODULE_12__","btnType","btnClass","btnText","disabled","style","backgroundColor","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","React","Component","connect","error","admin","dispatch","actions","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Button_module_css__WEBPACK_IMPORTED_MODULE_1__","Button","btnElement","classes","onClick","click","Default"],"mappings":"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","file":"static/js/10.e0411b55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Reset_center__1t6F3\",\"cancelbtn\":\"Reset_cancelbtn__3QFZO\",\"container\":\"Reset_container__2Ve8H\",\"psw\":\"Reset_psw__1SXFG\",\"modal\":\"Reset_modal__1-4Dd\",\"modal_content\":\"Reset_modal_content__3G98I\",\"animatezoom\":\"Reset_animatezoom__LPnDV\"};","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect, Link} from 'react-router-dom';\nimport resetStyle from './Reset.module.css';\nimport Input from '../../component/UI/Input/Input';\nimport Button from '../../component/UI/Button/Button';\nimport {updateObject, checkValidity} from '../../shared/utility';\nimport {Danger} from '../../component/UI/Alert/Alert';\nimport * as actions from '../../store/actions/index';\n\n\nclass Reset extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  state={ \n    controls:{\n          password: {\n                elementType: 'password',\n                elementConfig: {\n                  type: 'password',\n                  placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  minLength:6\n                },\n                valid:false,\n                touched:false,\n                label:'Password'\n              },\n          confirm_password: {\n                elementType: 'password',\n                elementConfig: {\n                  type: 'password',\n                  placeholder: 'Confirm Password'\n                },\n                value: '',\n                validation: {\n                  required: true,\n                  minLength:6\n                },\n                valid:false,\n                touched:false,\n                label:'Confirm Password'\n              }\n    },\n    isSignup:true,\n    formIsValid:false\n  }\n\n  componentDidMount(){\n\n  }\n  \n  inputChangedHandler=(event, controlName)=>{\n    const updatedControls = updateObject(this.state.controls, {\n      [controlName]:updateObject(this.state.controls[controlName],\n      {\n        value:event.target.value,\n        valid:checkValidity(event.target.value, this.state.controls[controlName].validation),\n        touched:true\n      }) \n    })\n    const updatedResetForm = updateObject(this.state.orderForm,{\n      [controlName]:updatedControls\n    });\n    let formIsValid=true;\n    for(let inputIdentifier in updatedResetForm){\n      formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n    }\n    if(this.state.controls.password.value.length && this.state.controls.confirm_password.value.length && this.state.controls.password.value!==this.state.controls.confirm_password.value){\n      formIsValid=true\n      document.getElementsByClassName('custom_err').innerHTML='Both Password should be equal'\n    }else{\n      formIsValid=false\n    }\n    this.setState({controls: updatedControls, formIsValid: formIsValid});\n  }\n\n  submitHandler=(event)=>{\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let resetToken = params.get('reset');\n    console.log(resetToken);\n    event.preventDefault();\n    this.props.onReset(this.state.controls.password.value, this.state.controls.confirm_password.value, resetToken)\n  }\n\n  render(){ \n    console.log(this.props.resetResponseMsg);\n    const formElementArray=[];\n    for(let key in this.state.controls){\n      formElementArray.push({id:key, config:this.state.controls[key]})\n    }\n    let form = formElementArray.map(formElement=>(\n      <Input key={formElement.id} \n          elementType={formElement.config.elementType}\n          elementConfig={formElement.config.elementConfig}\n          value={formElement.config.value}\n          invalid={formElement.config.valid}\n          shouldValidate={formElement.config.validation}\n          touched={formElement.config.touched}\n          label={formElement.config.label}\n          changed={(event)=>this.inputChangedHandler(event, formElement.id)}\n      />\n    ))\n    return(\n      <div className={resetStyle.center}>\n\n        {this.props.resetResponse?<Redirect to=\"/admin\" />:''}\n        {this.props.resetResponseMsg?<Danger message={this.props.resetResponseMsg} />:''}\n        <form className={[resetStyle.modal_content,resetStyle.animate].join(' ')} onSubmit={this.submitHandler}>\n          <div className={resetStyle.container}>\n            {form}\n            <Button btnType=\"submit\" btnClass=\"Default\" btnText=\"Submit\" disabled={!this.state.formIsValid} />\n          </div>\n        </form>\n        <div className={resetStyle.container} style={{ backgroundColor:'#f1f1f1' }}>\n          <label>\n            <span className={resetStyle.psw}>Have account <Link to=\"/admin\">Login?</Link></span>\n          </label>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state=>{\n  return {\n    error: state.admin.error,\n    resetResponse: state.admin.resetResponse,\n    resetResponseMsg: state.admin.resetResponseMsg \n  }\n}\nconst mapDispatchToProps = dispatch=>{\n  return {\n    onReset:(password, confirm_password, resetToken)=>dispatch(actions.adminResetPassword(password, confirm_password, resetToken))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset); \n\n\n\n  ","import React from 'react';\nimport * as classes from './Button.module.css';\n\nconst Button =(props)=>{\n\tlet btnElement=null;\n\tswitch(props.btnClass){\n\t\tcase ('Default'):\n\t\t\tbtnElement=<button type={props.btnType} className={classes.Default} onClick={props.click} disabled={props.disabled}>{props.btnText}</button>\n\t\tbreak;\n\t\tdefault:\n\t\t  \tbtnElement=<button type={props.btnType} className={classes.Default} onClick={props.click} disabled={props.disabled}>{props.btnText}</button>\n\t}\n\treturn btnElement;\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Default\":\"Button_Default__3ABMs\",\"Button\":\"Button_Button__1RsGI\"};"],"sourceRoot":""}